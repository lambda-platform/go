import{m as T}from"./DugTeqwv.js";import{V as b,M as S,c as I,S as a,I as V,b as n,a as h,F as d,d as G,h as P,f as E,g as q,P as x,t as k}from"./Qfm9_UtH.js";import{b as B,a as D,s as R}from"./DiWpzgXQ.js";import{V as F,a as K,h as c,e as z,D as U,M as f,W as y,f as C,g as W,F as X}from"./CeS5Ktbn.js";const Y=new b({format:new S,url:"https://imap.mn/06826032-4372-11ec-81d3-0242ac130003/{z}/{x}/{y}.pbf",tileGrid:I({maxZoom:19}),tilePixelRatio:16}),M=new F({wrapX:!1}),Z=new a({image:new V({anchor:[.5,1],anchorXUnits:"fraction",anchorYUnits:"fraction",src:"/map/marker.svg",scale:1})}),p=new a({stroke:new n({color:"blue",width:3})}),g=new h({renderMode:"vector",style:function(e){if(e.getId()in selection)return e.getGeometry().getType()==="LineString"?lineHighlightStyle:highlightStyle}}),w=new a({fill:new d({color:"rgba(255, 255, 255, 0.4)"}),stroke:new n({color:"blue",width:1.5})}),A=new K({source:M,style:e=>{switch(e.getGeometry().getType()){case"Point":return Z;case"LineString":return p;case"MultiLineString":return p;case"Polygon":return w;case"MultiPolygon":return w;default:return null}}}),H=e=>k(e,"EPSG:3857","EPSG:4326"),J={components:{basemapToggle:B,basemapGallery:D,starter:R},mixins:[T],data(){let e="googleLayerRoadmap";const i=localStorage.getItem("selectedBaseMapKey");return i&&(e=i),{map:null,vectorSource:M,draw:null,selectedType:"Point",baseKey:e,bases:c,base:new G({source:c[e]}),iMapBase:new h({source:Y}),is3D:!1,isGalleryVisible:!1,started:!1,modify:null,ready:!1,categories:[],zoom:16}},mounted(){!this.meta.hidden&&this.do_render&&this.initMap()},methods:{initMap(){const e=P([106.8723,47.8838]);this.map=new E({layers:[],target:this.$refs.map,view:new q({center:e,zoom:this.zoom,maxZoom:19})}),z(this.iMapBase,"https://imap.mn/06826032-4372-11ec-81d3-0242ac130003/style.json").then(()=>{this.baseKey==="iMap"?(this.base.setVisible(!1),this.iMapBase.setVisible(!0)):(this.iMapBase.setVisible(!1),this.base.setVisible(!0)),this.map.addLayer(this.iMapBase),this.map.addLayer(this.base),this.map.addLayer(A),this.renderLayers()}),this.ready=!0},changeLayerVisible(e,i){let t=this.categories[e].layers.findIndex(s=>s.url===i.url);t>=0&&(this.categories[e].layers[t].visible=!this.categories[e].layers[t].visible,this.categories[e].layers[t].layer.setVisible(this.categories[e].layers[t].visible))},changeLayerUniqueVisible(e,i,t){let s=this.categories[e].layers.findIndex(r=>r.url===i.url);if(s>=0){let r=this.categories[e].layers[s].uniqueRerender.uniqueValueInfos.findIndex(m=>m.value===t.value);r>=0&&(this.categories[e].layers[s].uniqueRerender.uniqueValueInfos[r].visible=!this.categories[e].layers[s].uniqueRerender.uniqueValueInfos[r].visible,this.categories[e].layers[s].layer.changed())}},clearSelection(){g.changed()},renderLayers(){this.categories.forEach((e,i)=>{e.layers.forEach((t,s)=>{(t.type==="Point"||t.type==="Polygon"||t.type==="Line")&&(t.layer=new h({declutter:!0,source:new b({format:new S,url:t.url}),style:(r,m)=>{let l=r.getGeometry();if(l.getType()==="Point"){let u=t.marker;if(t.uniqueRerender){let v=r.get(t.uniqueRerender.field),o=t.uniqueRerender.uniqueValueInfos.findIndex(L=>L.value===v);if(o>=0)if(this.categories[i].layers[s].uniqueRerender.uniqueValueInfos[o].visible)o>=0&&(u=t.uniqueRerender.uniqueValueInfos[o].symbol);else return null}return new a({image:new V({src:u,scale:25/Math.max(25,25),anchor:[.5,1],anchorXUnits:"fraction",anchorYUnits:"fraction"})})}else{if(l.getType()==="Polygon")return new a({fill:new d({color:t.fill}),stroke:new n({color:t.stroke,width:1}),text:t.label&&t.label.color?new Text({font:t.label.font,fill:new d({color:t.label.color}),text:r.get(t.label.field)}):void 0});if(l.getType()==="LineString")return new a({stroke:new n({color:t.stroke,width:2})})}}}),t.layer.set("layerID",t.id),t.layer.set("popup",t.popup),t.layer.set("layerTitle",t.title),t.layer.setVisible(t.visible),this.map.addLayer(t.layer))})}),this.map.addLayer(g)},start(){this.addInteraction(this.selectedType)},addInteraction(e){this.draw&&(this.map.removeInteraction(this.draw),this.map.removeInteraction(this.modify)),e!=="None"&&(this.draw=new U({source:this.vectorSource,type:e==="MultiLine"?"MultiLineString":e}),this.draw.on("drawstart",this.clear),this.draw.on("drawend",this.onDrawEnd),this.map.addInteraction(this.draw),this.started=!0,this.modify=new f({source:this.vectorSource}),this.modify.on("modifyend",this.onDrawEnd),this.map.addInteraction(this.modify))},clear(){this.vectorSource.clear()},onDrawEnd(e){let i=null;e.features?i=e.features.getArray()[0]:i=e.feature;const t=i.getGeometry().clone(),s=new y;if(t.getType()==="Point"){let r;r=new x(C(H(t.getCoordinates()),this.is3D)),this.model.form[this.model.component]=s.writeGeometry(r)}else t.transform("EPSG:3857","EPSG:4326"),this.model.form[this.model.component]=s.writeGeometry(t);this.started=!1,this.map.removeInteraction(this.draw)},setElement(){if(this.editMode){const i=new y().readGeometry(W(this.itemValue)),t=new X({geometry:i.transform("EPSG:4326","EPSG:3857")});if(this.vectorSource.addFeature(t),this.modify=new f({source:this.vectorSource}),this.modify.on("modifyend",this.onDrawEnd),this.map.addInteraction(this.modify),i.getType()==="Point"){const s=i.getCoordinates();this.map.getView().setCenter(s)}else{const s=this.vectorSource.getExtent();this.map.getView().fit(s,{size:this.map.getSize(),padding:[21,21,21,21]})}}},setBaseLayer(e){localStorage.setItem("selectedBaseMapKey",e),this.baseKey=e,this.base.setSource(c[e]),this.baseKey==="iMap"?(this.base.setVisible(!1),this.iMapBase.setVisible(!0)):(this.base.setVisible(!0),this.iMapBase.setVisible(!0))},toggleGalleryVisibility(){this.isGalleryVisible=!this.isGalleryVisible},destroy(){this.map&&(this.clear(),this.map.getInteractions().forEach(e=>{this.map.removeInteraction(e)}),this.map.getLayers().getArray().slice().forEach(e=>{this.map.removeLayer(e)}),this.map.setTarget(null),this.map.dispose(),this.map=null,this.ready=!1)}},watch:{selectedType(e){this.addInteraction(e)},itemValue(e,i){e&&!i&&this.setElement()},do_render(e){e?this.editMode?this.itemValue===null&&this.initMap():this.initMap():this.destroy()}}};export{J as m};
