import{k as i}from"./entry.e5ab3232.js";const l={props:["model","label","meta","do_render","editMode","is_show","relation_data","showInformationModal","url","setSchemaByModel","getSchemaByModel","isBuilder"],computed:{placeholder(){return this.meta&&this.meta.placeHolder!==null&&this.meta.placeHolder!==""&&this.meta.placeHolder!==void 0?this.meta.placeHolder:this.label},disabled(){return this.meta&&this.meta.disabled?this.meta.disabled:!1},options(){return this.meta.formType==="Radio"||this.meta.formType==="Select"||this.meta.formType==="ISelect"||this.meta.formType==="TreeSelect"?i(this.meta)&&i(this.meta.options)&&this.meta.options.length>=1?this.filterOption(this.meta.options):this.filterOption(this.relation_data(this.meta)):[]},itemValue(){return this.model.form[this.model.component]}},methods:{filterOption(e){if(e)if(this.meta.relation.parentFieldOfForm)if(this.model.form[this.meta.relation.parentFieldOfForm]){let t=e.filter(r=>r.parent_value===this.model.form[this.meta.relation.parentFieldOfForm]);return(this.meta.formType==="Select"||this.meta.formType==="ISelect"||this.meta.formType==="TreeSelect")&&this.initialValue(t),t}else return e||[];else return(this.meta.formType==="Select"||this.meta.formType==="ISelect"||this.meta.formType==="TreeSelect")&&this.initialValue(e),e||[];return[]}},data(){return{}}};export{l as m};
