"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[2193],{29119:(e,t,l)=>{l.r(t),l.d(t,{default:()=>o});var i=l(88798);const n={props:["model","rule","label","meta","disabled","relation_data","do_render"],computed:{lang:function(){var e=this,t=["dataNotFound","all"];return t.reduce((function(l,i,n){return l[i]=e.$t("dataForm."+t[n]),l}),{})},options:function(){var e=this;return this.checkedItemsCount=0,(0,i.fn)(this.meta)&&(0,i.fn)(this.meta.options)&&this.meta.options.length>=1?this.searchval?this.filterOption(this.meta.options).filter((function(t){return t.label.toLowerCase().includes(e.searchval.toLowerCase())})):this.filterOption(this.meta.options):this.searchval?this.filterOption(this.relation_data).filter((function(t){return t.label.toLowerCase().includes(e.searchval.toLowerCase())})):this.filterOption(this.relation_data)}},data:function(){return{value:null,addAble:!1,searchval:null,indeterminate:!0,checkAll:!1,checkAllGroup:null,checkedItemsCount:0}},watch:{do_render:function(e){if(null==e)this.value=null,Vue.set(this.model.form,this.model.component,this.meta.default?this.meta.default:void 0);else if(null!=this.model.form[this.model.component]&&null!=this.model.form[this.model.component]){var t=this.model.form[this.model.component];if(1==this.meta.relation.multiple){var l=t.toString().split(",");this.value=this.options.filter((function(e){return l.includes(e.value.toString())}))}else{var i=this.options.filter((function(e){return e.value==t}));this.value=i.length>=1?i[0]:null}}},value:function(e){if(e){Vue.set(this.model.form,this.model.component,e.map((function(e){return e.value})).join(","));var t=[];e.forEach((function(e){var l=e.label;t.push(l)})),this.checkAllGroup=t,this.checkedItemsCount=t.length}}},created:function(){this.meta.relation.addAble&&this.meta.relation.addFrom&&(this.addAble=!0)},methods:{isValid:i.fn,filterOption:function(e){var t=this;if(e){if(this.$props.meta.relation.parentFieldOfForm||null!=this.$props.model.form[this.$props.meta.relation.parentFieldOfForm]){var l=e.filter((function(e){return e.parent_value==t.$props.model.form[t.$props.meta.relation.parentFieldOfForm]}));return this.initialValue(l),l}return e||[]}return[]},initialValue:function(e){var t=this;if(null!=this.model.form[this.model.component]||""!=this.model.form[this.model.component]||null!=this.model.form[this.model.component])if(1==this.meta.relation.multiple&&null!=this.model.form[this.model.component]){var l=this.model.form[this.model.component].toString().split(","),i=e.filter((function(e){return l.includes(e.value.toString())}));i.length>=1&&(this.value=i)}else{var n=e.filter((function(e){return e.value==t.model.form[t.model.component]}));this.value=n.length>=1?n[0]:null}else this.value=null},onSuccess:function(e){var t=this,l=[];e.forEach((function(e){var i=t.options.filter((function(t){return t.label===e}));l.push(i[0].value)}));var i=l.join(",");this.model.form[this.model.component]=i},handleCheckAll:function(){if(this.indeterminate?this.checkAll=!1:this.checkAll=!this.checkAll,this.indeterminate=!1,this.checkAll){var e=[];this.options.forEach((function(t){var l=t.label;e.push(l)})),this.checkAllGroup=e}else this.checkAllGroup=[];this.checkedItemsCount=this.checkAllGroup.length,this.onSuccess(this.checkAllGroup)},checkAllGroupChange:function(e){this.checkedItemsCount=0,this.checkedItemsCount=e.length,e.length===this.options.length?(this.indeterminate=!1,this.checkAll=!0):e.length>0?(this.indeterminate=!0,this.checkAll=!1):(this.indeterminate=!1,this.checkAll=!1),this.onSuccess(e)}}};const o=(0,l(14486).A)(n,(function(){var e=this,t=e._self._c;return t("FormItem",{staticClass:"select-item",attrs:{label:e.label,prop:e.rule}},[t("div",{staticClass:"multi-checkbox"},[t("div",{staticClass:"checkbox-header"},[t("Checkbox",{attrs:{disabled:!(!e.meta||!e.meta.disabled)&&e.meta.disabled,indeterminate:e.indeterminate,value:e.checkAll},nativeOn:{click:function(t){return t.preventDefault(),e.handleCheckAll.apply(null,arguments)}}},[e._v(e._s(e.lang.all)+" /"+e._s(e.checkedItemsCount)+"/")])],1),e._v(" "),t("CheckboxGroup",{on:{"on-change":e.checkAllGroupChange},model:{value:e.checkAllGroup,callback:function(t){e.checkAllGroup=t},expression:"checkAllGroup"}},e._l(e.options,(function(l){return t("Checkbox",{key:l.index,attrs:{label:l.label,disabled:!(!e.meta||!e.meta.disabled)&&e.meta.disabled}})})),1)],1)])}),[],!1,null,null,null).exports}}]);